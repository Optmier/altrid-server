name: CI/CD Prod Auto run

on:
  push:
    branches: [master]
  # workflow_dispatch:

jobs:
  finish-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Fetch some commits
        run: |
          git fetch --depth=250 origin master develop

      - name: Set git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get package version
        uses: bbonkr/get-version-action@v1.3.1
        id: get_package_version
        with:
          project: "./package.json"

      - name: Set package version to env.
        run: echo "PACKAGE_VERSION=${{ steps.get_package_version.outputs.version }}" >> $GITHUB_ENV

      - name: Current git branch and package version
        run: |
          git branch
          echo "Package version is $PACKAGE_VERSION"

      - name: Create current version tag
        run: |
          git tag v$PACKAGE_VERSION
          git push --tags

      - name: Merge master to develop
        run: |
          git config pull.rebase false
          git checkout develop
          git pull origin master
          git push origin develop

      - name: Delete reference branch from origin
        run: git push origin --delete ${{ github.event.pull_request.head.ref }}
      
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:        
      - name: Checkout to master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Get package version
        uses: bbonkr/get-version-action@v1.3.1
        id: get_package_version
        with:
          project: "./package.json"

      - name: Set package version to env.
        run: echo "PACKAGE_VERSION=${{ steps.get_package_version.outputs.version }}" >> $GITHUB_ENV

      - name: Current git branch and package version
        run: |
          git branch
          echo "Package version is $PACKAGE_VERSION"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/altrid-lms-server -t ${{ secrets.DOCKER_USERNAME }}/altrid-lms-server:$PACKAGE_VERSION .

      - name: Docker push to hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/altrid-lms-server --all-tags

      # - name: Deploy to remote server
      #   uses: appleboy/ssh-action@master
        # with:
        #   host: secrets.REMOTE_SERVER_HOST
        #   username: secrets.REMOTE_SERVER_USERNAME
        #   scripts: |
        #     pwd
